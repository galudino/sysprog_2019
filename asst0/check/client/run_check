#!/bin/bash

## Script to build and run check.c with input file check_input.txt

CLIENT="check.c"
EXECUTABLE="check"

CC="gcc"

## I want to ensure that I write C89-compiliant code (C89/C90 == ANSI-C),
## and I want all compiler warnings to come up as errors.
## The default mode for this script, 'run_check', is debugging mode;
## the $RELEASE_FLAG will remove $CFLAGS from the compilation command,
## so what would remain is:     
##      gcc check.c -o check; ./check; ./check < check_input.txt
CSTD="-std=c89"
PEDANTIC="-pedantic"
ERRORS="-errors"
CFLAGS="$CSTD $PEDANTIC$ERRORS"

RELEASE_FLAG="release"

input() {
    #$CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "3 + 2"
    #$CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "NOT true"
    #$CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "9 / 5"
    #$CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "3 + 2; NOT true; 9 / 5"

    #$CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "  3 + 2
    #$CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "3 + 2  "
    #$CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "3 + true"
    #$CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "NOT 5"
    #$CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "true - false"
    #$CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "3 + +"
    #$CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "a + b"
    $CC $CLIENT $CFLAGS -o $EXECUTABLE; ./$EXECUTABLE "2 + 2;NOT true; 9 / 5"
}

if [ -z $1 ]
then
    input
else
    if [ $1 == $RELEASE_FLAG ]
    then
        CFLAGS=""
    fi
    input
fi
